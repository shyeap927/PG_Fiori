/**
* This file was auto-generated by SAP Web IDE build and includes all
* the source files required by SAPUI5 runtime for performance optimization.
* PLEASE DO NOT EDIT THIS FILE!! Changes will be overwritten the next time the build is run.
*/
jQuery.sap.registerPreloadedModules({
	"version": "2.0",
	"name": "so/display/Component-preload",
	"modules": {
		"so/display/view/Master.view.xml": "<mvc:View xmlns:mvc=\"sap.ui.core.mvc\" xmlns:core=\"sap.ui.core\" xmlns=\"sap.m\" controllerName=\"so.display.controller.Master\">\n\t<Page id=\"page\" title=\"{masterView>/title}\" navButtonPress=\"onNavBack\" showNavButton=\"true\">\n\t\t<subHeader>\n\t\t\t<Bar id=\"headerBar\">\n\t\t\t\t<contentMiddle>\n\t\t\t\t\t<SearchField id=\"searchField\" showRefreshButton=\"{= !${device>/support/touch} }\" tooltip=\"{i18n>masterSearchTooltip}\" width=\"100%\" search=\"onSearch\"/>\n\t\t\t\t</contentMiddle>\n\t\t\t</Bar>\n\t\t</subHeader>\n\t\t<content>\n\t\t\t<PullToRefresh id=\"pullToRefresh\" visible=\"{device>/support/touch}\" refresh=\"onRefresh\"/>\n\t\t\t<!-- For client side filtering add this to the items attribute:  parameters: {operationMode: 'Client'}}\" -->\n\t\t\t<List id=\"list\" items=\"{ path: '/SoHeaderDataSet', sorter: { path: 'Vbeln', descending: false }, groupHeaderFactory: '.createGroupHeader' }\" busyIndicatorDelay=\"{masterView>/delay}\" noDataText=\"{masterView>/noDataText}\" mode=\"{= ${device>/system/phone} ? 'None' : 'SingleSelectMaster'}\" growing=\"true\" growingThreshold=\"10\" growingScrollToLoad=\"true\" updateFinished=\"onUpdateFinished\" selectionChange=\"onSelectionChange\">\n\t\t\t\t<infoToolbar>\n\t\t\t\t\t<Toolbar active=\"true\" id=\"filterBar\" visible=\"{masterView>/isFilterBarVisible}\" press=\"onOpenViewSettings\">\n\t\t\t\t\t\t<Title id=\"filterBarLabel\" text=\"{masterView>/filterBarLabel}\"/>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</infoToolbar>\n\t\t\t\t<items>\n\t\t\t\t\t<ObjectListItem type=\"{= ${device>/system/phone} ? 'Active' : 'Inactive'}\" press=\"onSelectionChange\" title=\"{Vbeln}\" number=\"{ path: 'Netwr', formatter: '.formatter.currencyValue' }\">\n\t\t\t\t\t    <attributes>\n\t\t\t\t\t        <ObjectAttribute active=\"false\" id=\"__attribute8\" text=\"{Ernam}\"/>\n\t\t\t\t\t    </attributes>\n\t\t\t\t\t</ObjectListItem>\n\t\t\t\t</items>\n\t\t\t</List>\n\t\t</content>\n\t\t<footer>\n\t\t\t<OverflowToolbar id=\"footerbar\">\n\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t<Select id=\"sort-select\" type=\"IconOnly\" icon=\"sap-icon://sort\" autoAdjustWidth=\"true\" selectedKey=\"{masterView>/sortBy}\" change=\"onSort\">\n\t\t\t\t\t<core:Item id=\"masterSort1\" key=\"Vbeln\" text=\"{i18n>masterSort1}\"/>\n\t\t\t\t\t<core:Item id=\"masterSort2\" key=\"Netwr\" text=\"{i18n>masterSort2}\"/>\n\t\t\t\t</Select>\n\t\t\t\t<OverflowToolbarButton text=\"{i18n>masterListFilterButtonOverflowText}\" id=\"filter-button\" icon=\"sap-icon://filter\" press=\"onOpenViewSettings\"/>\n\t\t\t\t<Select id=\"group-select\" type=\"IconOnly\" icon=\"sap-icon://group-2\" autoAdjustWidth=\"true\" selectedKey=\"{masterView>/groupBy}\" change=\"onGroup\">\n\t\t\t\t\t<core:Item id=\"masterGroupNone\" key=\"None\" text=\"{i18n>masterGroupNone}\"/>\n\t\t\t\t\t<core:Item id=\"masterGroup1\" key=\"Netwr\" text=\"{i18n>masterGroup1}\"/>\n\t\t\t\t</Select>\n\t\t\t</OverflowToolbar>\n\t\t</footer>\n\t</Page>\n</mvc:View>",
		"so/display/Component.js": "sap.ui.define([\r\n\t\"sap/ui/core/UIComponent\",\r\n\t\"sap/ui/Device\",\r\n\t\"so/display/model/models\",\r\n\t\"so/display/controller/ListSelector\",\r\n\t\"so/display/controller/ErrorHandler\",\r\n\t\"so/display/model/formatter\",\r\n\t\"so/display/model/grouper\"\r\n], function(UIComponent, Device, models, ListSelector, ErrorHandler) {\r\n\t\"use strict\";\r\n\r\n\treturn UIComponent.extend(\"so.display.Component\", {\r\n\r\n\t\tmetadata: {\r\n\t\t\t\"version\": \"1.0.0\",\r\n\t\t\t\"rootView\": {\r\n\t\t\t\t\"viewName\": \"so.display.view.App\",\r\n\t\t\t\t\"type\": \"XML\",\r\n\t\t\t\t\"id\": \"app\"\r\n\t\t\t},\r\n\t\t\t\"dependencies\": {\r\n\t\t\t\t\"libs\": [\"sap.ui.core\", \"sap.m\", \"sap.ui.layout\"]\r\n\t\t\t},\r\n\t\t\t\"config\": {\r\n\t\t\t\t\"i18nBundle\": \"so.display.i18n.i18n\",\r\n\t\t\t\t\"serviceUrl\": \"/sap/opu/odata/sap/ZSALES_ORDER_SRV_01/\",\r\n\t\t\t\t\"icon\": \"\",\r\n\t\t\t\t\"favIcon\": \"\",\r\n\t\t\t\t\"phone\": \"\",\r\n\t\t\t\t\"phone@2\": \"\",\r\n\t\t\t\t\"tablet\": \"\",\r\n\t\t\t\t\"tablet@2\": \"\"\r\n\t\t\t},\r\n\t\t\t\"routing\": {\r\n\t\t\t\t\"config\": {\r\n\t\t\t\t\t\"routerClass\": \"sap.m.routing.Router\",\r\n\t\t\t\t\t\"viewType\": \"XML\",\r\n\t\t\t\t\t\"viewPath\": \"so.display.view\",\r\n\t\t\t\t\t\"controlId\": \"idAppControl\",\r\n\t\t\t\t\t\"controlAggregation\": \"detailPages\",\r\n\t\t\t\t\t\"bypassed\": {\r\n\t\t\t\t\t\t\"target\": [\"master\", \"notFound\"]\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\r\n\t\t\t\t\"routes\": [{\r\n\t\t\t\t\t\"pattern\": \"\",\r\n\t\t\t\t\t\"name\": \"master\",\r\n\t\t\t\t\t\"target\": [\"object\", \"master\"]\r\n\t\t\t\t}, {\r\n\t\t\t\t\t\"pattern\": \"SoHeaderDataSet/{objectId}\",\r\n\t\t\t\t\t\"name\": \"object\",\r\n\t\t\t\t\t\"target\": [\"master\", \"object\"]\r\n\t\t\t\t}],\r\n\r\n\t\t\t\t\"targets\": {\r\n\t\t\t\t\t\"master\": {\r\n\t\t\t\t\t\t\"viewName\": \"Master\",\r\n\t\t\t\t\t\t\"viewLevel\": 1,\r\n\t\t\t\t\t\t\"viewId\": \"master\",\r\n\t\t\t\t\t\t\"controlAggregation\": \"masterPages\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"object\": {\r\n\t\t\t\t\t\t\"viewName\": \"Detail\",\r\n\t\t\t\t\t\t\"viewId\": \"detail\",\r\n\t\t\t\t\t\t\"viewLevel\": 2\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"detailObjectNotFound\": {\r\n\t\t\t\t\t\t\"viewName\": \"DetailObjectNotFound\",\r\n\t\t\t\t\t\t\"viewId\": \"detailObjectNotFound\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"detailNoObjectsAvailable\": {\r\n\t\t\t\t\t\t\"viewName\": \"DetailNoObjectsAvailable\",\r\n\t\t\t\t\t\t\"viewId\": \"detailNoObjectsAvailable\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"notFound\": {\r\n\t\t\t\t\t\t\"viewName\": \"NotFound\",\r\n\t\t\t\t\t\t\"viewId\": \"notFound\"\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * The component is initialized by UI5 automatically during the startup of the app and calls the init method once.\r\n\t\t * In this method, the resource and application models are set and the router is initialized.\r\n\t\t * @public\r\n\t\t * @override\r\n\t\t */\r\n\t\tinit: function() {\r\n\t\t\tvar mConfig = this.getMetadata().getConfig();\r\n\r\n\t\t\t// creating and setting the necessary models\r\n\t\t\t// set the device model\r\n\t\t\tthis.setModel(models.createDeviceModel(), \"device\");\r\n\t\t\t// set the FLP model\r\n\t\t\tthis.setModel(models.createFLPModel(), \"FLP\");\r\n\r\n\t\t\t// create and set the ODataModel\r\n\t\t\tvar oModel = models.createODataModel({\r\n\t\t\t\turlParametersForEveryRequest: [\r\n\t\t\t\t\t\"sap-server\",\r\n\t\t\t\t\t\"sap-client\",\r\n\t\t\t\t\t\"sap-language\"\r\n\t\t\t\t],\r\n\t\t\t\turl: this.getMetadata().getConfig().serviceUrl,\r\n\t\t\t\tconfig: {\r\n\t\t\t\t\tmetadataUrlParams: {\r\n\t\t\t\t\t\t\"sap-documentation\": \"heading\"\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis.setModel(oModel);\r\n\t\t\tthis._createMetadataPromise(oModel);\r\n\r\n\t\t\t// set the i18n model\r\n\t\t\tthis.setModel(models.createResourceModel(mConfig.i18nBundle), \"i18n\");\r\n\r\n\t\t\tthis.oListSelector = new ListSelector();\r\n\t\t\tthis._oErrorHandler = new ErrorHandler(this);\r\n\t\t\t// call the base component's init function\r\n\t\t\tUIComponent.prototype.init.apply(this, arguments);\r\n\t\t\t// create the views based on the url/hash\r\n\t\t\tthis.getRouter().initialize();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * The component is destroyed by UI5 automatically.\r\n\t\t * In this method, the ListSelector and ErrorHandler are destroyed.\r\n\t\t * @public\r\n\t\t * @override\r\n\t\t */\r\n\t\tdestroy: function() {\r\n\t\t\tthis.oListSelector.destroy();\r\n\t\t\tthis._oErrorHandler.destroy();\r\n\t\t\tthis.getModel().destroy();\r\n\t\t\tthis.getModel(\"i18n\").destroy();\r\n\t\t\tthis.getModel(\"FLP\").destroy();\r\n\t\t\tthis.getModel(\"device\").destroy();\r\n\t\t\t// call the base component's destroy function\r\n\t\t\tUIComponent.prototype.destroy.apply(this, arguments);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * This method can be called to determine whether the sapUiSizeCompact or sapUiSizeCozy\r\n\t\t * design mode class should be set, which influences the size appearance of some controls.\r\n\t\t * @public\r\n\t\t * @return {string} css class, either 'sapUiSizeCompact' or 'sapUiSizeCozy' - or an empty string if no css class should be set\r\n\t\t */\r\n\t\tgetContentDensityClass: function() {\r\n\t\t\tif (this._sContentDensityClass === undefined) {\r\n\t\t\t\t// check whether FLP has already set the content density class; do nothing in this case\r\n\t\t\t\tif (jQuery(document.body).hasClass(\"sapUiSizeCozy\") || jQuery(document.body).hasClass(\"sapUiSizeCompact\")) {\r\n\t\t\t\t\tthis._sContentDensityClass = \"\";\r\n\t\t\t\t} else if (!Device.support.touch) { // apply \"compact\" mode if touch is not supported\r\n\t\t\t\t\tthis._sContentDensityClass = \"sapUiSizeCompact\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// \"cozy\" in case of touch support; default for most sap.m controls, but needed for desktop-first controls like sap.ui.table.Table\r\n\t\t\t\t\tthis._sContentDensityClass = \"sapUiSizeCozy\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn this._sContentDensityClass;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Creates a promise which is resolved when the metadata is loaded.\r\n\t\t * @param {sap.ui.core.Model} oModel the app model\r\n\t\t * @private\r\n\t\t */\r\n\t\t_createMetadataPromise: function(oModel) {\r\n\t\t\tthis.oWhenMetadataIsLoaded = new Promise(function(fnResolve, fnReject) {\r\n\t\t\t\toModel.attachEventOnce(\"metadataLoaded\", fnResolve);\r\n\t\t\t\toModel.attachEventOnce(\"metadataFailed\", fnReject);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t});\r\n\r\n});",
		"so/display/controller/ListSelector.js": "sap.ui.define([\r\n\t\"sap/ui/base/Object\"\r\n], function(BaseObject) {\r\n\t\"use strict\";\r\n\r\n\treturn BaseObject.extend(\"so.display.model.ListSelector\", {\r\n\r\n\t\t/**\r\n\t\t * Provides a convenience API for selecting list items. All the functions will wait until the initial load of the a List passed to the instance by the setBoundMasterList\r\n\t\t * function.\r\n\t\t * @class\r\n\t\t * @public\r\n\t\t * @alias so.display.model.ListSelector\r\n\t\t */\r\n\r\n\t\tconstructor: function() {\r\n\t\t\tthis._oWhenListHasBeenSet = new Promise(function(fnResolveListHasBeenSet) {\r\n\t\t\t\tthis._fnResolveListHasBeenSet = fnResolveListHasBeenSet;\r\n\t\t\t}.bind(this));\r\n\t\t\t// This promise needs to be created in the constructor, since it is allowed to\r\n\t\t\t// invoke selectItem functions before calling setBoundMasterList\r\n\t\t\tthis.oWhenListLoadingIsDone = new Promise(function(fnResolve, fnReject) {\r\n\t\t\t\t// Used to wait until the setBound masterList function is invoked\r\n\t\t\t\tthis._oWhenListHasBeenSet\r\n\t\t\t\t\t.then(function(oList) {\r\n\t\t\t\t\t\toList.getBinding(\"items\").attachEventOnce(\"dataReceived\",\r\n\t\t\t\t\t\t\tfunction(oData) {\r\n\t\t\t\t\t\t\t\tif (!oData.getParameter(\"data\")) {\r\n\t\t\t\t\t\t\t\t\tfnReject({\r\n\t\t\t\t\t\t\t\t\t\tlist: oList,\r\n\t\t\t\t\t\t\t\t\t\terror: true\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tvar oFirstListItem = oList.getItems()[0];\r\n\t\t\t\t\t\t\t\tif (oFirstListItem) {\r\n\t\t\t\t\t\t\t\t\t// Have to make sure that first list Item is selected\r\n\t\t\t\t\t\t\t\t\t// and a select event is triggered. Like that, the corresponding\r\n\t\t\t\t\t\t\t\t\t// detail page is loaded automatically\r\n\t\t\t\t\t\t\t\t\tfnResolve({\r\n\t\t\t\t\t\t\t\t\t\tlist: oList,\r\n\t\t\t\t\t\t\t\t\t\tfirstListitem: oFirstListItem\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t// No items in the list\r\n\t\t\t\t\t\t\t\t\tfnReject({\r\n\t\t\t\t\t\t\t\t\t\tlist: oList,\r\n\t\t\t\t\t\t\t\t\t\terror: false\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t});\r\n\t\t\t}.bind(this));\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * A bound list should be passed in here. Should be done, before the list has received its initial data from the server.\r\n\t\t * May only be invoked once per ListSelector instance.\r\n\t\t * @param {sap.m.List} oList The list all the select functions will be invoked on.\r\n\t\t * @public\r\n\t\t */\r\n\t\tsetBoundMasterList: function(oList) {\r\n\t\t\tthis._oList = oList;\r\n\t\t\tthis._fnResolveListHasBeenSet(oList);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Tries to select and scroll to a list item with a matching binding context. If there are no items matching the binding context or the ListMode is none,\r\n\t\t * no selection/scrolling will happen\r\n\t\t * @param {string} sBindingPath the binding path matching the binding path of a list item\r\n\t\t * @public\r\n\t\t */\r\n\t\tselectAListItem: function(sBindingPath) {\r\n\r\n\t\t\tthis.oWhenListLoadingIsDone.then(\r\n\t\t\t\tfunction() {\r\n\t\t\t\t\tvar oList = this._oList,\r\n\t\t\t\t\t\toSelectedItem;\r\n\r\n\t\t\t\t\tif (oList.getMode() === \"None\") {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\toSelectedItem = oList.getSelectedItem();\r\n\r\n\t\t\t\t\t// skip update if the current selection is already matching the object path\r\n\t\t\t\t\tif (oSelectedItem && oSelectedItem.getBindingContext().getPath() === sBindingPath) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\toList.getItems().some(function(oItem) {\r\n\t\t\t\t\t\tif (oItem.getBindingContext() && oItem.getBindingContext().getPath() === sBindingPath) {\r\n\t\t\t\t\t\t\toList.setSelectedItem(oItem);\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}.bind(this),\r\n\t\t\t\tfunction() {\r\n\t\t\t\t\tjQuery.sap.log.warning(\"Could not select the list item with the path\" + sBindingPath +\r\n\t\t\t\t\t\t\" because the list encountered an error or had no items\");\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t},\r\n\r\n\t\t/* =========================================================== */\r\n\t\t/* Convenience Functions for List Selection Change Event       */\r\n\t\t/* =========================================================== */\r\n\r\n\t\t/**\r\n\t\t * Attaches a listener and listener function to the ListSelector's bound master list. By using\r\n\t\t * a promise, the listener is added, even if the list is not available when 'attachListSelectionChange'\r\n\t\t * is called.\r\n\t\t * @param {function} fnFunction the function to be executed when the list fires a selection change event\r\n\t\t * @param {function} oListener the listener object\r\n\t\t * @return {so.display.model.ListSelector} the list selector object for method chaining\r\n\t\t * @public\r\n\t\t */\r\n\t\tattachListSelectionChange: function(fnFunction, oListener) {\r\n\t\t\tthis._oWhenListHasBeenSet.then(function() {\r\n\t\t\t\tthis._oList.attachSelectionChange(fnFunction, oListener);\r\n\t\t\t}.bind(this));\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Detaches a listener and listener function from the ListSelector's bound master list. By using\r\n\t\t * a promise, the listener is removed, even if the list is not available when 'detachListSelectionChange'\r\n\t\t * is called.\r\n\t\t * @param {function} fnFunction the function to be executed when the list fires a selection change event\r\n\t\t * @param {function} oListener the listener object\r\n\t\t * @return {so.display.model.ListSelector} the list selector object for method chaining\r\n\t\t * @public\r\n\t\t */\r\n\t\tdetachListSelectionChange: function(fnFunction, oListener) {\r\n\t\t\tthis._oWhenListHasBeenSet.then(function() {\r\n\t\t\t\tthis._oList.detachSelectionChange(fnFunction, oListener);\r\n\t\t\t}.bind(this));\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Removes all selections from master list.\r\n\t\t * Does not trigger 'selectionChange' event on master list, though.\r\n\t\t * @public\r\n\t\t */\r\n\t\tclearMasterListSelection: function() {\r\n\t\t\t//use promise to make sure that 'this._oList' is available\r\n\t\t\tthis._oWhenListHasBeenSet.then(function() {\r\n\t\t\t\tthis._oList.removeSelections(true);\r\n\t\t\t}.bind(this));\r\n\t\t}\r\n\r\n\t});\r\n\r\n});",
		"so/display/controller/BaseController.js": "/*global history */\r\nsap.ui.define([\r\n\t\"sap/ui/core/mvc/Controller\",\r\n\t\"sap/ui/core/routing/History\"\r\n], function(Controller, History) {\r\n\t\"use strict\";\r\n\r\n\treturn Controller.extend(\"so.display.controller.BaseController\", {\r\n\t\t/**\r\n\t\t * Convenience method for accessing the router in every controller of the application.\r\n\t\t * @public\r\n\t\t * @returns {sap.ui.core.routing.Router} the router for this component\r\n\t\t */\r\n\t\tgetRouter: function() {\r\n\t\t\treturn this.getOwnerComponent().getRouter();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Convenience method for getting the view model by name in every controller of the application.\r\n\t\t * @public\r\n\t\t * @param {string} sName the model name\r\n\t\t * @returns {sap.ui.model.Model} the model instance\r\n\t\t */\r\n\t\tgetModel: function(sName) {\r\n\t\t\treturn this.getView().getModel(sName);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Convenience method for setting the view model in every controller of the application.\r\n\t\t * @public\r\n\t\t * @param {sap.ui.model.Model} oModel the model instance\r\n\t\t * @param {string} sName the model name\r\n\t\t * @returns {sap.ui.mvc.View} the view instance\r\n\t\t */\r\n\t\tsetModel: function(oModel, sName) {\r\n\t\t\treturn this.getView().setModel(oModel, sName);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Convenience method for getting the resource bundle.\r\n\t\t * @public\r\n\t\t * @returns {sap.ui.model.resource.ResourceModel} the resourceModel of the component\r\n\t\t */\r\n\t\tgetResourceBundle: function() {\r\n\t\t\treturn this.getOwnerComponent().getModel(\"i18n\").getResourceBundle();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Event handler  for navigating back.\r\n\t\t * It checks if there is a history entry. If yes, history.go(-1) will happen.\r\n\t\t * If not, it will replace the current entry of the browser history with the master route.\r\n\t\t * @public\r\n\t\t */\r\n\t\tonNavBack: function() {\r\n\t\t\tvar sPreviousHash = History.getInstance().getPreviousHash();\r\n\r\n\t\t\tif (sPreviousHash !== undefined) {\r\n\t\t\t\t// The history contains a previous entry\r\n\t\t\t\thistory.go(-1);\r\n\t\t\t} else {\r\n\t\t\t\t// Otherwise we go backwards with a forward history\r\n\t\t\t\tvar bReplace = true;\r\n\t\t\t\tthis.getRouter().navTo(\"master\", {}, bReplace);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t});\r\n\r\n});",
		"so/display/controller/Master.controller.js": "/*global history */\r\nsap.ui.define([\r\n\t\"so/display/controller/BaseController\",\r\n\t\"sap/ui/model/json/JSONModel\",\r\n\t\"sap/ui/model/Filter\",\r\n\t\"sap/ui/model/FilterOperator\",\r\n\t\"sap/ui/model/Sorter\",\r\n\t\"sap/m/GroupHeaderListItem\",\r\n\t\"sap/ui/Device\",\r\n\t\"so/display/model/formatter\",\r\n\t\"so/display/model/grouper\"\r\n], function(BaseController, JSONModel, Filter, FilterOperator, Sorter, GroupHeaderListItem, Device, formatter, grouper) {\r\n\t\"use strict\";\r\n\r\n\treturn BaseController.extend(\"so.display.controller.Master\", {\r\n\r\n\t\tformatter: formatter,\r\n\r\n\t\t/* =========================================================== */\r\n\t\t/* lifecycle methods                                           */\r\n\t\t/* =========================================================== */\r\n\r\n\t\t/**\r\n\t\t * Called when the master list controller is instantiated. It sets up the event handling for the master/detail communication and other lifecycle tasks.\r\n\t\t * @public\r\n\t\t */\r\n\t\tonInit: function() {\r\n\t\t\tthis._oView = this.getView();\r\n\t\t\tthis._oView.attachAfterRendering(function(){\r\n\t\t\t\tvar sField = \"Ernam\";\r\n\t\t\t\tvar sOperator = sap.ui.model.FilterOperator.EQ;\r\n\t\t\t\tvar sValue = \"WYWONG\";\r\n\t\t\t\t\r\n\t\t\t\tvar oBinding = this.byId(\"list\").getBinding(\"items\");\r\n\t\t\t\toBinding.filter([new sap.ui.model.Filter(sField, sOperator, sValue)]);\r\n\t\t\t});\r\n\t\t\t// Control state model\r\n\t\t\tvar oList = this.byId(\"list\"),\r\n\t\t\t\toViewModel = new JSONModel({\r\n\t\t\t\t\tisFilterBarVisible: false,\r\n\t\t\t\t\tfilterBarLabel: \"\",\r\n\t\t\t\t\tdelay: 0,\r\n\t\t\t\t\ttitle: this.getResourceBundle().getText(\"masterTitleCount\", [0]),\r\n\t\t\t\t\tnoDataText: this.getResourceBundle().getText(\"masterListNoDataText\"),\r\n\t\t\t\t\tsortBy: \"Vbeln\",\r\n\t\t\t\t\tgroupBy: \"None\"\r\n\t\t\t\t}),\r\n\t\t\t\t// Put down master list's original value for busy indicator delay,\r\n\t\t\t\t// so it can be restored later on. Busy handling on the master list is\r\n\t\t\t\t// taken care of by the master list itself.\r\n\t\t\t\tiOriginalBusyDelay = oList.getBusyIndicatorDelay();\r\n\r\n\t\t\tthis._oList = oList;\r\n\t\t\t// keeps the filter and search state\r\n\t\t\tthis._oListFilterState = {\r\n\t\t\t\taFilter: [],\r\n\t\t\t\taSearch: []\r\n\t\t\t};\r\n\r\n\t\t\tthis.setModel(oViewModel, \"masterView\");\r\n\t\t\t// Make sure, busy indication is showing immediately so there is no\r\n\t\t\t// break after the busy indication for loading the view's meta data is\r\n\t\t\t// ended (see promise 'oWhenMetadataIsLoaded' in AppController)\r\n\t\t\toList.attachEventOnce(\"updateFinished\", function() {\r\n\t\t\t\t// Restore original busy indicator delay for the list\r\n\t\t\t\toViewModel.setProperty(\"/delay\", iOriginalBusyDelay);\r\n\t\t\t});\r\n\r\n\t\t\tthis.getView().addEventDelegate({\r\n\t\t\t\tonBeforeFirstShow: function() {\r\n\t\t\t\t\tthis.getOwnerComponent().oListSelector.setBoundMasterList(oList);\r\n\t\t\t\t}.bind(this)\r\n\t\t\t});\r\n\r\n\t\t\tthis.getRouter().getRoute(\"master\").attachPatternMatched(this._onMasterMatched, this);\r\n\t\t\tthis.getRouter().attachBypassed(this.onBypassed, this);\r\n\t\t},\r\n\r\n\t\t/* =========================================================== */\r\n\t\t/* event handlers                                              */\r\n\t\t/* =========================================================== */\r\n\r\n\t\t/**\r\n\t\t * After list data is available, this handler method updates the\r\n\t\t * master list counter and hides the pull to refresh control, if\r\n\t\t * necessary.\r\n\t\t * @param {sap.ui.base.Event} oEvent the update finished event\r\n\t\t * @public\r\n\t\t */\r\n\t\tonUpdateFinished: function(oEvent) {\r\n\t\t\t// update the master list object counter after new data is loaded\r\n\t\t\tthis._updateListItemCount(oEvent.getParameter(\"total\"));\r\n\t\t\t// hide pull to refresh if necessary\r\n\t\t\tthis.byId(\"pullToRefresh\").hide();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Event handler for the master search field. Applies current\r\n\t\t * filter value and triggers a new search. If the search field's\r\n\t\t * 'refresh' button has been pressed, no new search is triggered\r\n\t\t * and the list binding is refresh instead.\r\n\t\t * @param {sap.ui.base.Event} oEvent the search event\r\n\t\t * @public\r\n\t\t */\r\n\t\tonSearch: function(oEvent) {\r\n\t\t\tif (oEvent.getParameters().refreshButtonPressed) {\r\n\t\t\t\t// Search field's 'refresh' button has been pressed.\r\n\t\t\t\t// This is visible if you select any master list item.\r\n\t\t\t\t// In this case no new search is triggered, we only\r\n\t\t\t\t// refresh the list binding.\r\n\t\t\t\tthis.onRefresh();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar sQuery = oEvent.getParameter(\"query\");\r\n\r\n\t\t\tif (sQuery) {\r\n\t\t\t\tthis._oListFilterState.aSearch = [new Filter(\"Vbeln\", FilterOperator.Contains, sQuery)];\r\n\t\t\t} else {\r\n\t\t\t\tthis._oListFilterState.aSearch = [];\r\n\t\t\t}\r\n\t\t\tthis._applyFilterSearch();\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Event handler for refresh event. Keeps filter, sort\r\n\t\t * and group settings and refreshes the list binding.\r\n\t\t * @public\r\n\t\t */\r\n\t\tonRefresh: function() {\r\n\t\t\tthis._oList.getBinding(\"items\").refresh();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Event handler for the sorter selection.\r\n\t\t * @param {sap.ui.base.Event} oEvent the select event\r\n\t\t * @public\r\n\t\t */\r\n\t\tonSort: function(oEvent) {\r\n\t\t\tvar sKey = oEvent.getSource().getSelectedItem().getKey(),\r\n\t\t\t\toViewModel = this.getModel(\"masterView\"),\r\n\t\t\t\tsGroupKey = oViewModel.getProperty(\"/groupBy\");\r\n\r\n\t\t\tif (sGroupKey !== \"None\" && sKey !== sGroupKey) {\r\n\t\t\t\t// If the list is grouped by something different than the new sorting, remove the grouping\r\n\t\t\t\t// Grouping only works if the list is primary sorted by the grouping\r\n\t\t\t\toViewModel.setProperty(\"/groupBy\", \"None\");\r\n\t\t\t}\r\n\r\n\t\t\tthis._applyGroupSort([new Sorter(sKey, false)]);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Event handler for the grouper selection.\r\n\t\t * @param {sap.ui.base.Event} oEvent the search field event\r\n\t\t * @public\r\n\t\t */\r\n\t\tonGroup: function(oEvent) {\r\n\t\t\tvar sKey = oEvent.getSource().getSelectedItem().getKey();\r\n\t\t\tvar aSorters = [];\r\n\r\n\t\t\tif (sKey === \"Netwr\") {\r\n\t\t\t\t// Grouping means sorting so we set the select to the same Entity used for grouping\r\n\t\t\t\tthis.getModel(\"masterView\").setProperty(\"/sortBy\", \"Netwr\");\r\n\r\n\t\t\t\taSorters.push(\r\n\t\t\t\t\tnew Sorter(\"Netwr\", false,\r\n\t\t\t\t\t\tgrouper[sKey].bind(oEvent.getSource()))\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\tthis._applyGroupSort(aSorters);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Event handler for the filter button to open the ViewSettingsDialog.\r\n\t\t * which is used to add or remove filters to the master list. This\r\n\t\t * handler method is also called when the filter bar is pressed,\r\n\t\t * which is added to the beginning of the master list when a filter is applied.\r\n\t\t * @public\r\n\t\t */\r\n\t\tonOpenViewSettings: function() {\r\n\t\t\tif (!this._oViewSettingsDialog) {\r\n\t\t\t\tthis._oViewSettingsDialog = sap.ui.xmlfragment(\"so.display.view.ViewSettingsDialog\", this);\r\n\t\t\t\tthis.getView().addDependent(this._oViewSettingsDialog);\r\n\t\t\t\t// forward compact/cozy style into Dialog\r\n\t\t\t\tthis._oViewSettingsDialog.addStyleClass(this.getOwnerComponent().getContentDensityClass());\r\n\t\t\t}\r\n\t\t\tthis._oViewSettingsDialog.open();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Event handler called when ViewSettingsDialog has been confirmed, i.e.\r\n\t\t * has been closed with 'OK'. In the case, the currently chosen filters\r\n\t\t * are applied to the master list, which can also mean that the currently\r\n\t\t * applied filters are removed from the master list, in case the filter\r\n\t\t * settings are removed in the ViewSettingsDialog.\r\n\t\t * @param {sap.ui.base.Event} oEvent the confirm event\r\n\t\t * @public\r\n\t\t */\r\n\t\tonConfirmViewSettingsDialog: function(oEvent) {\r\n\t\t\tvar aFilterItems = oEvent.getParameters().filterItems,\r\n\t\t\t\taFilters = [],\r\n\t\t\t\taCaptions = [];\r\n\r\n\t\t\t// update filter state:\r\n\t\t\t// combine the filter array and the filter string\r\n\t\t\taFilterItems.forEach(function(oItem) {\r\n\t\t\t\tswitch (oItem.getKey()) {\r\n\t\t\t\t\tcase \"Filter1\":\r\n\t\t\t\t\t\taFilters.push(new Filter(\"Netwr\", FilterOperator.LE, 100));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"Filter2\":\r\n\t\t\t\t\t\taFilters.push(new Filter(\"Netwr\", FilterOperator.GT, 100));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\taCaptions.push(oItem.getText());\r\n\t\t\t});\r\n\r\n\t\t\tthis._oListFilterState.aFilter = aFilters;\r\n\t\t\tthis._updateFilterBar(aCaptions.join(\", \"));\r\n\t\t\tthis._applyFilterSearch();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Event handler for the list selection event\r\n\t\t * @param {sap.ui.base.Event} oEvent the list selectionChange event\r\n\t\t * @public\r\n\t\t */\r\n\t\tonSelectionChange: function(oEvent) {\r\n\t\t\t// get the list item, either from the listItem parameter or from the event's source itself (will depend on the device-dependent mode).\r\n\t\t\tthis._showDetail(oEvent.getParameter(\"listItem\") || oEvent.getSource());\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Event handler for the bypassed event, which is fired when no routing pattern matched.\r\n\t\t * If there was an object selected in the master list, that selection is removed.\r\n\t\t * @public\r\n\t\t */\r\n\t\tonBypassed: function() {\r\n\t\t\tthis._oList.removeSelections(true);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Used to create GroupHeaders with non-capitalized caption.\r\n\t\t * These headers are inserted into the master list to\r\n\t\t * group the master list's items.\r\n\t\t * @param {Object} oGroup group whose text is to be displayed\r\n\t\t * @public\r\n\t\t * @returns {sap.m.GroupHeaderListItem} group header with non-capitalized caption.\r\n\t\t */\r\n\t\tcreateGroupHeader: function(oGroup) {\r\n\t\t\treturn new GroupHeaderListItem({\r\n\t\t\t\ttitle: oGroup.text,\r\n\t\t\t\tupperCase: false\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Navigates back in the browser history, if the entry was created by this app.\r\n\t\t * If not, it navigates to the Fiori Launchpad home page\r\n\t\t * @override\r\n\t\t * @public\r\n\t\t */\r\n\t\tonNavBack: function() {\r\n\t\t\tvar oHistory = sap.ui.core.routing.History.getInstance(),\r\n\t\t\t\tsPreviousHash = oHistory.getPreviousHash(),\r\n\t\t\t\toCrossAppNavigator = sap.ushell.Container.getService(\"CrossApplicationNavigation\");\r\n\r\n\t\t\tif (sPreviousHash !== undefined) {\r\n\t\t\t\t// The history contains a previous entry\r\n\t\t\t\thistory.go(-1);\r\n\t\t\t} else {\r\n\t\t\t\t// Navigate back to FLP home\r\n\t\t\t\toCrossAppNavigator.toExternal({\r\n\t\t\t\t\ttarget: {\r\n\t\t\t\t\t\tshellHash: \"#\"\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/* =========================================================== */\r\n\t\t/* begin: internal methods                                     */\r\n\t\t/* =========================================================== */\r\n\r\n\t\t/**\r\n\t\t * If the master route was hit (empty hash) we have to set\r\n\t\t * the hash to to the first item in the list as soon as the\r\n\t\t * listLoading is done and the first item in the list is known\r\n\t\t * @private\r\n\t\t */\r\n\t\t_onMasterMatched: function() {\r\n\t\t\tthis.getOwnerComponent().oListSelector.oWhenListLoadingIsDone.then(\r\n\t\t\t\tfunction(mParams) {\r\n\t\t\t\t\tif (mParams.list.getMode() === \"None\") {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar sObjectId = mParams.firstListitem.getBindingContext().getProperty(\"Vbeln\");\r\n\t\t\t\t\tthis.getRouter().navTo(\"object\", {\r\n\t\t\t\t\t\tobjectId: sObjectId\r\n\t\t\t\t\t}, true);\r\n\t\t\t\t}.bind(this),\r\n\t\t\t\tfunction(mParams) {\r\n\t\t\t\t\tif (mParams.error) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.getRouter().getTargets().display(\"detailNoObjectsAvailable\");\r\n\t\t\t\t}.bind(this)\r\n\t\t\t);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Shows the selected item on the detail page\r\n\t\t * On phones a additional history entry is created\r\n\t\t * @param {sap.m.ObjectListItem} oItem selected Item\r\n\t\t * @private\r\n\t\t */\r\n\t\t_showDetail: function(oItem) {\r\n\t\t\tvar bReplace = !Device.system.phone;\r\n\t\t\tthis.getRouter().navTo(\"object\", {\r\n\t\t\t\tobjectId: oItem.getBindingContext().getProperty(\"Vbeln\")\r\n\t\t\t}, bReplace);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Sets the item count on the master list header\r\n\t\t * @param {integer} iTotalItems the total number of items in the list\r\n\t\t * @private\r\n\t\t */\r\n\t\t_updateListItemCount: function(iTotalItems) {\r\n\t\t\tvar sTitle;\r\n\t\t\t// only update the counter if the length is final\r\n\t\t\tif (this._oList.getBinding(\"items\").isLengthFinal()) {\r\n\t\t\t\tsTitle = this.getResourceBundle().getText(\"masterTitleCount\", [iTotalItems]);\r\n\t\t\t\tthis.getModel(\"masterView\").setProperty(\"/title\", sTitle);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Internal helper method to apply both filter and search state together on the list binding\r\n\t\t * @private\r\n\t\t */\r\n\t\t_applyFilterSearch: function() {\r\n\t\t\tvar aFilters = this._oListFilterState.aSearch.concat(this._oListFilterState.aFilter),\r\n\t\t\t\toViewModel = this.getModel(\"masterView\");\r\n\t\t\tthis._oList.getBinding(\"items\").filter(aFilters, \"Application\");\r\n\t\t\t// changes the noDataText of the list in case there are no filter results\r\n\t\t\tif (aFilters.length !== 0) {\r\n\t\t\t\toViewModel.setProperty(\"/noDataText\", this.getResourceBundle().getText(\"masterListNoDataWithFilterOrSearchText\"));\r\n\t\t\t} else if (this._oListFilterState.aSearch.length > 0) {\r\n\t\t\t\t// only reset the no data text to default when no new search was triggered\r\n\t\t\t\toViewModel.setProperty(\"/noDataText\", this.getResourceBundle().getText(\"masterListNoDataText\"));\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Internal helper method to apply both group and sort state together on the list binding\r\n\t\t * @private\r\n\t\t */\r\n\t\t_applyGroupSort: function(aSorters) {\r\n\t\t\tthis._oList.getBinding(\"items\").sort(aSorters);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Internal helper method that sets the filter bar visibility property and the label's caption to be shown\r\n\t\t * @param {string} sFilterBarText the selected filter value\r\n\t\t * @private\r\n\t\t */\r\n\t\t_updateFilterBar: function(sFilterBarText) {\r\n\t\t\tvar oViewModel = this.getModel(\"masterView\");\r\n\t\t\toViewModel.setProperty(\"/isFilterBarVisible\", (this._oListFilterState.aFilter.length > 0));\r\n\t\t\toViewModel.setProperty(\"/filterBarLabel\", this.getResourceBundle().getText(\"masterFilterBarText\", [sFilterBarText]));\r\n\t\t}\r\n\r\n\t});\r\n\r\n});",
		"so/display/controller/ErrorHandler.js": "sap.ui.define([\r\n\t\"sap/ui/base/Object\",\r\n\t\"sap/m/MessageBox\"\r\n], function(Object, MessageBox) {\r\n\t\"use strict\";\r\n\r\n\treturn Object.extend(\"so.display.controller.ErrorHandler\", {\r\n\r\n\t\t/**\r\n\t\t * Handles application errors by automatically attaching to the model events and displaying errors when needed.\r\n\t\t * @class\r\n\t\t * @param {sap.ui.core.UIComponent} oComponent reference to the app's component\r\n\t\t * @public\r\n\t\t * @alias so.display.controller.ErrorHandler\r\n\t\t */\r\n\t\tconstructor: function(oComponent) {\r\n\t\t\tthis._oResourceBundle = oComponent.getModel(\"i18n\").getResourceBundle();\r\n\t\t\tthis._oComponent = oComponent;\r\n\t\t\tthis._oModel = oComponent.getModel();\r\n\t\t\tthis._bMessageOpen = false;\r\n\t\t\tthis._sErrorText = this._oResourceBundle.getText(\"errorText\");\r\n\t\t\tthis._sErrorTitle = this._oResourceBundle.getText(\"errorTitle\");\r\n\t\t\tthis._oModel.attachMetadataFailed(function(oEvent) {\r\n\t\t\t\tvar oParams = oEvent.getParameters();\r\n\r\n\t\t\t\tthis._showMetadataError(oParams.response);\r\n\t\t\t}, this);\r\n\r\n\t\t\tthis._oModel.attachRequestFailed(function(oEvent) {\r\n\t\t\t\tvar oParams = oEvent.getParameters();\r\n\r\n\t\t\t\t// An entity that was not found in the service is also throwing a 404 error in oData.\r\n\t\t\t\t// We already cover this case with a notFound target so we skip it here.\r\n\t\t\t\t// A request that cannot be sent to the server is a technical error that we have to handle though\r\n\t\t\t\tif (oParams.response.statusCode !== \"404\" || (oParams.response.statusCode === 404 && oParams.response.responseText.indexOf(\r\n\t\t\t\t\t\t\"Cannot POST\") === 0)) {\r\n\t\t\t\t\tthis._showServiceError(oParams.response);\r\n\t\t\t\t}\r\n\t\t\t}, this);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Shows a {@link sap.m.MessageBox} when the metadata call has failed.\r\n\t\t * The user can try to refresh the metadata.\r\n\t\t * @param {string} sDetails a technical error to be displayed on request\r\n\t\t * @private\r\n\t\t */\r\n\t\t_showMetadataError: function(sDetails) {\r\n\t\t\tMessageBox.show(\r\n\t\t\t\tthis._sErrorText, {\r\n\t\t\t\t\tid: \"metadataErrorMessageBox\",\r\n\t\t\t\t\ticon: MessageBox.Icon.ERROR,\r\n\t\t\t\t\ttitle: this._sErrorTitle,\r\n\t\t\t\t\tdetails: sDetails,\r\n\t\t\t\t\tstyleClass: this._oComponent.getContentDensityClass(),\r\n\t\t\t\t\tactions: [MessageBox.Action.CLOSE]\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Shows a {@link sap.m.MessageBox} when a service call has failed.\r\n\t\t * Only the first error message will be display.\r\n\t\t * @param {string} sDetails a technical error to be displayed on request\r\n\t\t * @private\r\n\t\t */\r\n\t\t_showServiceError: function(sDetails) {\r\n\t\t\tif (this._bMessageOpen) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis._bMessageOpen = true;\r\n\t\t\tMessageBox.show(\r\n\t\t\t\tthis._sErrorText, {\r\n\t\t\t\t\tid: \"serviceErrorMessageBox\",\r\n\t\t\t\t\ticon: MessageBox.Icon.ERROR,\r\n\t\t\t\t\ttitle: this._sErrorTitle,\r\n\t\t\t\t\tdetails: sDetails,\r\n\t\t\t\t\tstyleClass: this._oComponent.getContentDensityClass(),\r\n\t\t\t\t\tactions: [MessageBox.Action.CLOSE],\r\n\t\t\t\t\tonClose: function() {\r\n\t\t\t\t\t\tthis._bMessageOpen = false;\r\n\t\t\t\t\t}.bind(this)\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t}\r\n\t});\r\n\r\n});",
		"so/display/model/grouper.js": "sap.ui.define([], function() {\r\n\t\"use strict\";\r\n\r\n\t/*\r\n\t * Use this file to implement your custom grouping functions\r\n\t * The predefined functions are simple examples and might be replaced by your more complex implementations\r\n\t * to be called with .bind() and handed over to a sap.ui.model.Sorter\r\n\t * return value for all your functions is an object with  key-text pairs\r\n\t * the oContext parameter is not under your control!\r\n\t */\r\n\r\n\treturn {\r\n\r\n\t\t/**\r\n\t\t * Grouping function to group the master list by Netwr\r\n\t\t * @public\r\n\t\t * @param {object} oContext the current list item context\r\n\t\t * @returns {object} an object with the Netwr as key and a text for the group headers\r\n\t\t */\r\n\t\tNetwr: function(oContext) {\r\n\t\t\tvar iPrice = oContext.getProperty(\"Netwr\"),\r\n\t\t\t\tsKey,\r\n\t\t\t\tsText,\r\n\t\t\t\toResourceBundle = this.getModel(\"i18n\").getResourceBundle(); // this is the source control\r\n\r\n\t\t\tif (iPrice <= 20) {\r\n\t\t\t\tsKey = \"LE20\";\r\n\t\t\t\tsText = oResourceBundle.getText(\"masterGroup1Header1\");\r\n\t\t\t} else {\r\n\t\t\t\tsKey = \"GT20\";\r\n\t\t\t\tsText = oResourceBundle.getText(\"masterGroup1Header2\");\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\tkey: sKey,\r\n\t\t\t\ttext: sText\r\n\t\t\t};\r\n\t\t}\r\n\t};\r\n\r\n});",
		"so/display/model/formatter.js": "sap.ui.define([], function() {\r\n\t\"use strict\";\r\n\r\n\treturn {\r\n\t\t/**\r\n\t\t * Rounds the currency value to 2 digits\r\n\t\t * @public\r\n\t\t * @param {string} sValue value to be formatted\r\n\t\t * @returns {string} formatted currency value with 2 digits\r\n\t\t */\r\n\t\tcurrencyValue: function(sValue) {\r\n\t\t\tif (!sValue) {\r\n\t\t\t\treturn \"\";\r\n\t\t\t}\r\n\r\n\t\t\treturn parseFloat(sValue).toFixed(2);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Returns a configuration object for the {@link sap.ushell.ui.footerbar.AddBookMarkButton} \"appData\" property\r\n\t\t * @public\r\n\t\t * @param {string} sTitle the title for the \"save as tile\" dialog\r\n\t\t * @returns {object} the configuration object\r\n\t\t */\r\n\t\tshareTileData: function(sTitle) {\r\n\t\t\treturn {\r\n\t\t\t\ttitle: sTitle\r\n\t\t\t};\r\n\t\t}\r\n\t};\r\n\r\n});",
		"so/display/model/models.js": "sap.ui.define([\r\n\t\"sap/ui/model/json/JSONModel\",\r\n\t\"sap/ui/Device\",\r\n\t\"sap/ui/model/odata/v2/ODataModel\",\r\n\t\"sap/ui/model/resource/ResourceModel\"\r\n], function(JSONModel, Device, ODataModel, ResourceModel) {\r\n\t\"use strict\";\r\n\r\n\tfunction extendMetadataUrlParameters(aUrlParametersToAdd, oMetadataUrlParams, sServiceUrl) {\r\n\t\tvar oExtensionObject = {},\r\n\t\t\toServiceUri = new URI(sServiceUrl);\r\n\r\n\t\taUrlParametersToAdd.forEach(function(sUrlParam) {\r\n\t\t\tvar sLanguage,\r\n\t\t\t\toUrlParameters,\r\n\t\t\t\tsParameterValue;\r\n\r\n\t\t\t// for sap-language we check if the launchpad can provide it.\r\n\t\t\tif (sUrlParam === \"sap-language\") {\r\n\t\t\t\tsLanguage = sap.ushell.Container.getUser().getLanguage();\r\n\r\n\t\t\t\tif (sLanguage) {\r\n\t\t\t\t\toMetadataUrlParams[\"sap-language\"] = sLanguage;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t// Continue searching in the url\r\n\t\t\t}\r\n\r\n\t\t\toUrlParameters = jQuery.sap.getUriParameters();\r\n\t\t\tsParameterValue = oUrlParameters.get(sUrlParam);\r\n\t\t\tif (sParameterValue) {\r\n\t\t\t\toMetadataUrlParams[sUrlParam] = sParameterValue;\r\n\t\t\t\toServiceUri.addSearch(sUrlParam, sParameterValue);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tjQuery.extend(oMetadataUrlParams, oExtensionObject);\r\n\t\treturn oServiceUri.toString();\r\n\t}\r\n\r\n\treturn {\r\n\t\t/**\r\n\t\t *\r\n\t\t * @param {object} oOptions a map which contains the following parameter properties\r\n\t\t * @param {string} oOptions.url see {@link sap.ui.model.odata.v2.ODataModel#constructor.sServiceUrl}.\r\n\t\t * @param {object} [oOptions.urlParametersForEveryRequest] If the parameter is present in the URL or in case of language the UShell can provide it,\r\n\t\t * it is added to the odata models metadataUrlParams {@link sap.ui.model.odata.v2.ODataModel#constructor.mParameters.metadataUrlParams}, and to the service url.\r\n\t\t * If you provided a value in the config.metadataUrlParams this value will be overwritten by the value in the url.\r\n\t\t *\r\n\t\t * Example: the app is started with the url query, and the user has an us language set in the launchpad:\r\n\t\t *\r\n\t\t * ?sap-server=serverValue&sap-host=hostValue\r\n\t\t *\r\n\t\t * The createODataModel looks like this.\r\n\t\t *\r\n\t\t * models.createODataModel({\r\n\t\t *     urlParametersToPassOn: [\r\n\t\t *         \"sap-server\",\r\n\t\t *         \"sap-language\",\r\n\t\t *         \"anotherValue\"\r\n\t\t *     ],\r\n\t\t *     url : \"my/Url\"\r\n\t\t * });\r\n\t\t *\r\n\t\t * then the config will have the following metadataUrlParams:\r\n\t\t *\r\n\t\t * metadataUrlParams: {\r\n\t\t *     // retrieved from the url\r\n\t\t *     \"sap-server\" : \"serverValue\"\r\n\t\t *     // language is added from the launchpad\r\n\t\t *     \"sap-language\" : \"us\"\r\n\t\t *     // anotherValue is not present in the url and will not be added\r\n\t\t * }\r\n\t\t *\r\n\t\t * @param {object} [oOptions.config] see {@link sap.ui.model.odata.v2.ODataModel#constructor.mParameters} it is the exact same object, the metadataUrlParams are enriched by the oOptions.urlParametersToPassOn\r\n\t\t * @returns {sap.ui.model.odata.v2.ODataModel}\r\n\t\t */\r\n\t\tcreateODataModel: function(oOptions) {\r\n\t\t\tvar aUrlParametersForEveryRequest,\r\n\t\t\t\toConfig,\r\n\t\t\t\tsUrl;\r\n\r\n\t\t\toOptions = oOptions || {};\r\n\r\n\t\t\tif (!oOptions.url) {\r\n\t\t\t\tjQuery.sap.log.error(\"Please provide a url when you want to create an ODataModel\", \"so/display.model.models.createODataModel\");\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\t// create a copied instance since we modify the config\r\n\t\t\toConfig = jQuery.extend(true, {}, oOptions.config);\r\n\r\n\t\t\taUrlParametersForEveryRequest = oOptions.urlParametersForEveryRequest || [];\r\n\t\t\toConfig.metadataUrlParams = oConfig.metadataUrlParams || {};\r\n\r\n\t\t\tsUrl = extendMetadataUrlParameters(aUrlParametersForEveryRequest, oConfig.metadataUrlParams, oOptions.url);\r\n\r\n\t\t\treturn this._createODataModel(sUrl, oConfig);\r\n\t\t},\r\n\r\n\t\t_createODataModel: function(sUrl, oConfig) {\r\n\t\t\treturn new ODataModel(sUrl, oConfig);\r\n\t\t},\r\n\r\n\t\tcreateDeviceModel: function() {\r\n\t\t\tvar oModel = new JSONModel(Device);\r\n\t\t\toModel.setDefaultBindingMode(\"OneWay\");\r\n\t\t\treturn oModel;\r\n\t\t},\r\n\r\n\t\tcreateFLPModel: function() {\r\n\t\t\tvar bIsShareInJamActive = sap.ushell.Container.getUser().isJamActive(),\r\n\t\t\t\toModel = new JSONModel({\r\n\t\t\t\t\tisShareInJamActive: bIsShareInJamActive\r\n\t\t\t\t});\r\n\t\t\toModel.setDefaultBindingMode(\"OneWay\");\r\n\t\t\treturn oModel;\r\n\t\t},\r\n\r\n\t\tcreateResourceModel: function(sBundleName) {\r\n\t\t\tvar oResourceModel = new ResourceModel({\r\n\t\t\t\t\"bundleName\": sBundleName\r\n\t\t\t});\r\n\t\t\treturn oResourceModel;\r\n\t\t}\r\n\t};\r\n\r\n});",
		"so/display/view/Detail.view.xml": "<mvc:View controllerName=\"so.display.controller.Detail\" xmlns=\"sap.m\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns:footerbar=\"sap.ushell.ui.footerbar\">\n\t<Page id=\"page\" navButtonPress=\"onNavBack\" showNavButton=\"{device>/system/phone}\" title=\"{i18n>detailTitle}\" busy=\"{detailView>/busy}\"\n\t\tbusyIndicatorDelay=\"{detailView>/delay}\">\n\t\t<content>\n\t\t\t<ObjectHeader id=\"objectHeader\" title=\"{Vbeln}\" number=\"{ path: 'Netwr', formatter: '.formatter.currencyValue' }\"></ObjectHeader>\n\t\t\t<IconTabBar id=\"iconTabBar\" class=\"sapUiResponsiveContentPadding\">\n\t\t\t\t<items>\n\t\t\t\t\t<IconTabFilter id=\"iconTabBarFilter1\" icon=\"sap-icon://hint\" tooltip=\"{i18n>detailIconTabBarInfo}\"></IconTabFilter>\n\t\t\t\t\t<IconTabFilter id=\"iconTabBarFilter2\" icon=\"sap-icon://attachment\" tooltip=\"{i18n>detailIconTabBarAttachments}\"></IconTabFilter>\n\t\t\t\t</items>\n\t\t\t</IconTabBar>\n\t\t\t<Table id=\"lineItemsList\" width=\"auto\" items=\"{HeaderToItemNav}\" updateFinished=\"onListUpdateFinished\"\n\t\t\t\tnoDataText=\"{i18n>detailLineItemTableNoDataText}\" busyIndicatorDelay=\"{detailView>/lineItemTableDelay}\" class=\"sapUiResponsiveMargin\">\n\t\t\t\t<headerToolbar>\n\t\t\t\t\t<Toolbar id=\"lineItemsToolbar\">\n\t\t\t\t\t\t<Title id=\"lineItemsHeader\" text=\"{detailView>/lineItemListTitle}\"/>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</headerToolbar>\n\t\t\t\t<columns>\n\t\t\t\t\t<Column>\n\t\t\t\t\t\t<Text text=\"{i18n>detailLineItemTableIDColumn}\"/>\n\t\t\t\t\t</Column>\n\t\t\t\t\t<Column minScreenWidth=\"Tablet\" demandPopin=\"true\" hAlign=\"Right\">\n\t\t\t\t\t\t<Text text=\"{i18n>detailLineItemTableUnitNumberColumn}\"/>\n\t\t\t\t\t</Column>\n\t\t\t\t</columns>\n\t\t\t\t<items>\n\t\t\t\t\t<ColumnListItem>\n\t\t\t\t\t\t<cells>\n\t\t\t\t\t\t\t<ObjectIdentifier title=\"{Matnr}\" text=\"{Posnr}\"/>\n\t\t\t\t\t\t\t<ObjectNumber/>\n\t\t\t\t\t\t</cells>\n\t\t\t\t\t</ColumnListItem>\n\t\t\t\t</items>\n\t\t\t</Table>\n\t\t</content>\n\t\t<footer>\n\t\t\t<OverflowToolbar id=\"footerToolbar\">\n\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t<Button id=\"shareButton\" tooltip=\"{i18n>shareTooltip}\" icon=\"sap-icon://action\" press=\"onSharePress\">\n\t\t\t\t\t<dependents>\n\t\t\t\t\t\t<ActionSheet id=\"shareSheet\" showCancelButton=\"true\" placement=\"Top\">\n\t\t\t\t\t\t\t<buttons>\n\t\t\t\t\t\t\t\t<Button id=\"shareEmail\" icon=\"sap-icon://email\" text=\"{i18n>shareSendEmail}\" press=\"onShareEmailPress\"/>\n\t\t\t\t\t\t\t\t<Button id=\"shareInJam\" icon=\"sap-icon://jam\" text=\"{i18n>shareOnJamTitle}\" press=\"onShareInJamPress\" visible=\"{FLP>/isShareInJamActive}\"/>\n\t\t\t\t\t\t\t\t<footerbar:AddBookmarkButton id=\"shareTile\" appData=\"{ path: 'detailView>/saveAsTileTitle', formatter: '.formatter.shareTileData' }\"/>\n\t\t\t\t\t\t\t</buttons>\n\t\t\t\t\t\t</ActionSheet>\n\t\t\t\t\t</dependents>\n\t\t\t\t</Button>\n\t\t\t</OverflowToolbar>\n\t\t</footer>\n\t</Page>\n</mvc:View>",
		"so/display/view/ViewSettingsDialog.fragment.xml": "<core:FragmentDefinition xmlns=\"sap.m\" xmlns:core=\"sap.ui.core\">\n\t<ViewSettingsDialog id=\"viewSettingsDialog\" confirm=\"onConfirmViewSettingsDialog\" resetFilters=\"onViewSettingsDialogResetFilters\">\n\t\t<filterItems>\n\t\t\t<ViewSettingsFilterItem id=\"filterItems\" text=\"{i18n>masterFilterName}\" key=\"Price\" multiSelect=\"false\">\n\t\t\t\t<items>\n\t\t\t\t\t<ViewSettingsItem text=\"{i18n>masterFilter1}\" key=\"Filter1\" id=\"viewFilter1\"/>\n\t\t\t\t\t<ViewSettingsItem text=\"{i18n>masterFilter2}\" key=\"Filter2\" id=\"viewFilter2\"/>\n\t\t\t\t</items>\n\t\t\t</ViewSettingsFilterItem>\n\t\t</filterItems>\n\t</ViewSettingsDialog>\n</core:FragmentDefinition>",
		"so/display/view/DetailObjectNotFound.view.xml": "<mvc:View controllerName=\"so.display.controller.BaseController\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\">\n\t<MessagePage id=\"page\" title=\"{i18n>detailTitle}\" text=\"{i18n>noObjectFoundText}\" icon=\"{sap-icon://product}\" description=\"\"\n\t\tshowNavButton=\"{device>/system/phone}\" navButtonPress=\"onNavBack\"></MessagePage>\n</mvc:View>",
		"so/display/view/NotFound.view.xml": "<mvc:View controllerName=\"so.display.controller.BaseController\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\">\n\t<MessagePage id=\"page\" title=\"{i18n>notFoundTitle}\" text=\"{i18n>notFoundText}\" icon=\"{sap-icon://document}\" description=\"\"\n\t\tshowNavButton=\"{device>/system/phone}\" navButtonPress=\"onNavBack\"></MessagePage>\n</mvc:View>",
		"so/display/view/DetailNoObjectsAvailable.view.xml": "<mvc:View controllerName=\"so.display.controller.BaseController\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\">\n\t<MessagePage id=\"page\" title=\"{i18n>notAvailableViewTitle}\" text=\"{i18n>noObjectsAvailableText}\" icon=\"{sap-icon://product}\" description=\"\"\n\t\tshowNavButton=\"{device>/system/phone}\" navButtonPress=\"onNavBack\"></MessagePage>\n</mvc:View>",
		"so/display/view/App.view.xml": "<mvc:View controllerName=\"so.display.controller.App\" xmlns:mvc=\"sap.ui.core.mvc\" displayBlock=\"true\" busy=\"{appView>/busy}\"\n\tbusyIndicatorDelay=\"{appView>/delay}\" xmlns=\"sap.m\">\n\t<SplitApp id=\"idAppControl\"/>\n</mvc:View>",
		"so/display/controller/App.controller.js": "sap.ui.define([\r\n\t\"so/display/controller/BaseController\",\r\n\t\"sap/ui/model/json/JSONModel\"\r\n], function(BaseController, JSONModel) {\r\n\t\"use strict\";\r\n\r\n\treturn BaseController.extend(\"so.display.controller.App\", {\r\n\r\n\t\tonInit: function() {\r\n\t\t\tvar oViewModel,\r\n\t\t\t\tfnSetAppNotBusy,\r\n\t\t\t\toListSelector = this.getOwnerComponent().oListSelector,\r\n\t\t\t\tiOriginalBusyDelay = this.getView().getBusyIndicatorDelay();\r\n\r\n\t\t\toViewModel = new JSONModel({\r\n\t\t\t\tbusy: true,\r\n\t\t\t\tdelay: 0\r\n\t\t\t});\r\n\t\t\tthis.setModel(oViewModel, \"appView\");\r\n\r\n\t\t\tfnSetAppNotBusy = function() {\r\n\t\t\t\toViewModel.setProperty(\"/busy\", false);\r\n\t\t\t\toViewModel.setProperty(\"/delay\", iOriginalBusyDelay);\r\n\t\t\t};\r\n\r\n\t\t\tthis.getOwnerComponent().oWhenMetadataIsLoaded.\r\n\t\t\tthen(fnSetAppNotBusy, fnSetAppNotBusy);\r\n\r\n\t\t\t// Makes sure that master view is hidden in split app\r\n\t\t\t// after a new list entry has been selected.\r\n\t\t\toListSelector.attachListSelectionChange(function() {\r\n\t\t\t\tthis.byId(\"idAppControl\").hideMaster();\r\n\t\t\t}, this);\r\n\r\n\t\t\t// apply content density mode to root view\r\n\t\t\tthis.getView().addStyleClass(this.getOwnerComponent().getContentDensityClass());\r\n\t\t}\r\n\r\n\t});\r\n\r\n});",
		"so/display/localService/mockserver.js": "sap.ui.define([\r\n\t\"sap/ui/core/util/MockServer\"\r\n], function(MockServer) {\r\n\t\"use strict\";\r\n\r\n\tvar oMockServer,\r\n\t\t_sAppModulePath = \"so/display/\",\r\n\t\t_sJsonFilesModulePath = _sAppModulePath + \"localService/mockdata\",\r\n\t\t_sMetadataUrl = _sAppModulePath + \"localService/metadata\",\r\n\t\t_sMainDataSourceUrl = \"/sap/opu/odata/sap/ZSALES_ORDER_SRV_01/\";\r\n\r\n\treturn {\r\n\t\t/**\r\n\t\t * Initializes the mock server.\r\n\t\t * You can configure the delay with the URL parameter \"serverDelay\".\r\n\t\t * The local mock data in this folder is returned instead of the real data for testing.\r\n\t\t * @public\r\n\t\t */\r\n\r\n\t\tinit: function() {\r\n\t\t\tvar oUriParameters = jQuery.sap.getUriParameters(),\r\n\t\t\t\tsJsonFilesUrl = jQuery.sap.getModulePath(_sJsonFilesModulePath),\r\n\t\t\t\tsEntity = \"SoHeaderDataSet\",\r\n\t\t\t\tsErrorParam = oUriParameters.get(\"errorType\"),\r\n\t\t\t\tiErrorCode = sErrorParam === \"badRequest\" ? 400 : 500,\r\n\t\t\t\tsMetadataUrl = jQuery.sap.getModulePath(_sMetadataUrl, \".xml\");\r\n\r\n\t\t\toMockServer = new MockServer({\r\n\t\t\t\trootUri: _sMainDataSourceUrl\r\n\t\t\t});\r\n\r\n\t\t\t// configure mock server with a delay of 1s\r\n\t\t\tMockServer.config({\r\n\t\t\t\tautoRespond: true,\r\n\t\t\t\tautoRespondAfter: (oUriParameters.get(\"serverDelay\") || 1000)\r\n\t\t\t});\r\n\r\n\t\t\toMockServer.simulate(sMetadataUrl, {\r\n\t\t\t\tsMockdataBaseUrl: sJsonFilesUrl,\r\n\t\t\t\tbGenerateMissingMockData: true\r\n\t\t\t});\r\n\r\n\t\t\tvar aRequests = oMockServer.getRequests(),\r\n\t\t\t\tfnResponse = function(iErrCode, sMessage, aRequest) {\r\n\t\t\t\t\taRequest.response = function(oXhr) {\r\n\t\t\t\t\t\toXhr.respond(iErrCode, {\r\n\t\t\t\t\t\t\t\"Content-Type\": \"text/plain;charset=utf-8\"\r\n\t\t\t\t\t\t}, sMessage);\r\n\t\t\t\t\t};\r\n\t\t\t\t};\r\n\r\n\t\t\t// handling the metadata error test\r\n\t\t\tif (oUriParameters.get(\"metadataError\")) {\r\n\t\t\t\taRequests.forEach(function(aEntry) {\r\n\t\t\t\t\tif (aEntry.path.toString().indexOf(\"$metadata\") > -1) {\r\n\t\t\t\t\t\tfnResponse(500, \"metadata Error\", aEntry);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// Handling request errors\r\n\t\t\tif (sErrorParam) {\r\n\t\t\t\taRequests.forEach(function(aEntry) {\r\n\t\t\t\t\tif (aEntry.path.toString().indexOf(sEntity) > -1) {\r\n\t\t\t\t\t\tfnResponse(iErrorCode, sErrorParam, aEntry);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\toMockServer.start();\r\n\r\n\t\t\tjQuery.sap.log.info(\"Running the app with mock data\");\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * @public returns the mockserver of the app, should be used in integration tests\r\n\t\t * @returns {sap.ui.core.util.MockServer} the mockserver instance\r\n\t\t */\r\n\t\tgetMockServer: function() {\r\n\t\t\treturn oMockServer;\r\n\t\t}\r\n\t};\r\n\r\n});",
		"so/display/controller/Detail.controller.js": "/*global location */\r\nsap.ui.define([\r\n\t\"so/display/controller/BaseController\",\r\n\t\"sap/ui/model/json/JSONModel\",\r\n\t\"so/display/model/formatter\"\r\n], function(BaseController, JSONModel, formatter) {\r\n\t\"use strict\";\r\n\r\n\treturn BaseController.extend(\"so.display.controller.Detail\", {\r\n\r\n\t\tformatter: formatter,\r\n\r\n\t\t/* =========================================================== */\r\n\t\t/* lifecycle methods                                           */\r\n\t\t/* =========================================================== */\r\n\r\n\t\tonInit: function() {\r\n\t\t\t// Model used to manipulate control states. The chosen values make sure,\r\n\t\t\t// detail page is busy indication immediately so there is no break in\r\n\t\t\t// between the busy indication for loading the view's meta data\r\n\t\t\tvar oViewModel = new JSONModel({\r\n\t\t\t\tbusy: false,\r\n\t\t\t\tdelay: 0,\r\n\t\t\t\tlineItemListTitle: this.getResourceBundle().getText(\"detailLineItemTableHeading\")\r\n\t\t\t});\r\n\r\n\t\t\tthis.getRouter().getRoute(\"object\").attachPatternMatched(this._onObjectMatched, this);\r\n\r\n\t\t\tthis.setModel(oViewModel, \"detailView\");\r\n\r\n\t\t\tthis.getOwnerComponent().oWhenMetadataIsLoaded.then(this._onMetadataLoaded.bind(this));\r\n\t\t},\r\n\r\n\t\t/* =========================================================== */\r\n\t\t/* event handlers                                              */\r\n\t\t/* =========================================================== */\r\n\r\n\t\t/**\r\n\t\t * Event handler when the share button has been clicked\r\n\t\t * @param {sap.ui.base.Event} oEvent the butten press event\r\n\t\t * @public\r\n\t\t */\r\n\t\tonSharePress: function() {\r\n\t\t\tvar oShareSheet = this.byId(\"shareSheet\");\r\n\t\t\toShareSheet.addStyleClass(this.getOwnerComponent().getContentDensityClass());\r\n\t\t\toShareSheet.openBy(this.byId(\"shareButton\"));\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Event handler when the share by E-Mail button has been clicked\r\n\t\t * @public\r\n\t\t */\r\n\t\tonShareEmailPress: function() {\r\n\t\t\tvar oViewModel = this.getModel(\"detailView\");\r\n\r\n\t\t\tsap.m.URLHelper.triggerEmail(\r\n\t\t\t\tnull,\r\n\t\t\t\toViewModel.getProperty(\"/shareSendEmailSubject\"),\r\n\t\t\t\toViewModel.getProperty(\"/shareSendEmailMessage\")\r\n\t\t\t);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Event handler when the share in JAM button has been clicked\r\n\t\t * @public\r\n\t\t */\r\n\t\tonShareInJamPress: function() {\r\n\t\t\tvar oViewModel = this.getModel(\"detailView\"),\r\n\t\t\t\toShareDialog = sap.ui.getCore().createComponent({\r\n\t\t\t\t\tname: \"sap.collaboration.components.fiori.sharing.dialog\",\r\n\t\t\t\t\tsettings: {\r\n\t\t\t\t\t\tobject: {\r\n\t\t\t\t\t\t\tid: location.href,\r\n\t\t\t\t\t\t\tshare: oViewModel.getProperty(\"/shareOnJamTitle\")\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\toShareDialog.open();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Updates the item count within the line item table's header\r\n\t\t * @param {object} oEvent an event containing the total number of items in the list\r\n\t\t * @private\r\n\t\t */\r\n\t\tonListUpdateFinished: function(oEvent) {\r\n\t\t\tvar sTitle,\r\n\t\t\t\tiTotalItems = oEvent.getParameter(\"total\"),\r\n\t\t\t\toViewModel = this.getModel(\"detailView\");\r\n\r\n\t\t\t// only update the counter if the length is final\r\n\t\t\tif (this.byId(\"lineItemsList\").getBinding(\"items\").isLengthFinal()) {\r\n\t\t\t\tif (iTotalItems) {\r\n\t\t\t\t\tsTitle = this.getResourceBundle().getText(\"detailLineItemTableHeadingCount\", [iTotalItems]);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//Display 'Line Items' instead of 'Line items (0)'\r\n\t\t\t\t\tsTitle = this.getResourceBundle().getText(\"detailLineItemTableHeading\");\r\n\t\t\t\t}\r\n\t\t\t\toViewModel.setProperty(\"/lineItemListTitle\", sTitle);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/* =========================================================== */\r\n\t\t/* begin: internal methods                                     */\r\n\t\t/* =========================================================== */\r\n\r\n\t\t/**\r\n\t\t * Binds the view to the object path and expands the aggregated line items.\r\n\t\t * @function\r\n\t\t * @param {sap.ui.base.Event} oEvent pattern match event in route 'object'\r\n\t\t * @private\r\n\t\t */\r\n\t\t_onObjectMatched: function(oEvent) {\r\n\t\t\tvar sObjectId = oEvent.getParameter(\"arguments\").objectId;\r\n\t\t\tthis.getOwnerComponent().oWhenMetadataIsLoaded.then(function() {\r\n\t\t\t\tvar sObjectPath = this.getModel().createKey(\"SoHeaderDataSet\", {\r\n\t\t\t\t\tVbeln: sObjectId\r\n\t\t\t\t});\r\n\t\t\t\tthis._bindView(\"/\" + sObjectPath);\r\n\t\t\t}.bind(this));\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Binds the view to the object path. Makes sure that detail view displays\r\n\t\t * a busy indicator while data for the corresponding element binding is loaded.\r\n\t\t * @function\r\n\t\t * @param {string} sObjectPath path to the object to be bound to the view.\r\n\t\t * @private\r\n\t\t */\r\n\t\t_bindView: function(sObjectPath) {\r\n\t\t\t// Set busy indicator during view binding\r\n\t\t\tvar oViewModel = this.getModel(\"detailView\");\r\n\r\n\t\t\t// If the view was not bound yet its not busy, only if the binding requests data it is set to busy again\r\n\t\t\toViewModel.setProperty(\"/busy\", false);\r\n\r\n\t\t\tthis.getView().bindElement({\r\n\t\t\t\tpath: sObjectPath,\r\n\t\t\t\tevents: {\r\n\t\t\t\t\tchange: this._onBindingChange.bind(this),\r\n\t\t\t\t\tdataRequested: function() {\r\n\t\t\t\t\t\toViewModel.setProperty(\"/busy\", true);\r\n\t\t\t\t\t},\r\n\t\t\t\t\tdataReceived: function() {\r\n\t\t\t\t\t\toViewModel.setProperty(\"/busy\", false);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t_onBindingChange: function() {\r\n\t\t\tvar oView = this.getView(),\r\n\t\t\t\toElementBinding = oView.getElementBinding();\r\n\r\n\t\t\t// No data for the binding\r\n\t\t\tif (!oElementBinding.getBoundContext()) {\r\n\t\t\t\tthis.getRouter().getTargets().display(\"detailObjectNotFound\");\r\n\t\t\t\t// if object could not be found, the selection in the master list\r\n\t\t\t\t// does not make sense anymore.\r\n\t\t\t\tthis.getOwnerComponent().oListSelector.clearMasterListSelection();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar sPath = oElementBinding.getPath(),\r\n\t\t\t\toResourceBundle = this.getResourceBundle(),\r\n\t\t\t\toObject = oView.getModel().getObject(sPath),\r\n\t\t\t\tsObjectId = oObject.Vbeln,\r\n\t\t\t\tsObjectName = oObject.Vbeln,\r\n\t\t\t\toViewModel = this.getModel(\"detailView\");\r\n\r\n\t\t\tthis.getOwnerComponent().oListSelector.selectAListItem(sPath);\r\n\r\n\t\t\toViewModel.setProperty(\"/saveAsTileTitle\", oResourceBundle.getText(\"shareSaveTileAppTitle\", [sObjectName]));\r\n\t\t\toViewModel.setProperty(\"/shareOnJamTitle\", sObjectName);\r\n\t\t\toViewModel.setProperty(\"/shareSendEmailSubject\",\r\n\t\t\t\toResourceBundle.getText(\"shareSendEmailObjectSubject\", [sObjectId]));\r\n\t\t\toViewModel.setProperty(\"/shareSendEmailMessage\",\r\n\t\t\t\toResourceBundle.getText(\"shareSendEmailObjectMessage\", [sObjectName, sObjectId, location.href]));\r\n\t\t},\r\n\r\n\t\t_onMetadataLoaded: function() {\r\n\t\t\t// Store original busy indicator delay for the detail view\r\n\t\t\tvar iOriginalViewBusyDelay = this.getView().getBusyIndicatorDelay(),\r\n\t\t\t\toViewModel = this.getModel(\"detailView\"),\r\n\t\t\t\toLineItemTable = this.byId(\"lineItemsList\"),\r\n\t\t\t\tiOriginalLineItemTableBusyDelay = oLineItemTable.getBusyIndicatorDelay();\r\n\r\n\t\t\t// Make sure busy indicator is displayed immediately when\r\n\t\t\t// detail view is displayed for the first time\r\n\t\t\toViewModel.setProperty(\"/delay\", 0);\r\n\t\t\toViewModel.setProperty(\"/lineItemTableDelay\", 0);\r\n\r\n\t\t\toLineItemTable.attachEventOnce(\"updateFinished\", function() {\r\n\t\t\t\t// Restore original busy indicator delay for line item table\r\n\t\t\t\toViewModel.setProperty(\"/lineItemTableDelay\", iOriginalLineItemTableBusyDelay);\r\n\t\t\t});\r\n\r\n\t\t\t// Binding the view will set it to not busy - so the view is always busy if it is not bound\r\n\t\t\toViewModel.setProperty(\"/busy\", true);\r\n\t\t\t// Restore original busy indicator delay for the detail view\r\n\t\t\toViewModel.setProperty(\"/delay\", iOriginalViewBusyDelay);\r\n\t\t}\r\n\r\n\t});\r\n\r\n});"
	}
});